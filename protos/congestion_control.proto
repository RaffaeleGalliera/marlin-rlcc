syntax="proto3";

package congestioncontrol;

option java_multiple_files = true;
option java_outer_classname = "CongestionControlProto";

// Interface exported by the server
service CongestionControl {

    // Define a Bidirectional streaming
    //
    // Accept a stream of TransmissionStatuses sent while the optimal action
    // is waiting to be computed other TransmissionStatuses are recieved
    rpc OptimizeCongestionControl(stream TransmissionStatus) returns (stream Action) {}
}

// TransmissionStatuses are represented by a list of parameters that are 
// going to be decided in further iterations the following is just a
// placeholder
message TransmissionStatus {
    int64 cumulative_received_bytes = 1;
    int64 cumulative_sent_bytes = 2;
    int64 cumulative_sent_good_bytes = 3;
    int64 current_window_size = 4;
    int64 last_receive_timestamp = 5;
    int64 traffic_in_flight = 6;
}

// Actions represent the CongestionWindow update to be performed
// the following is meant to be just a placeholder
message Action {
    int32 cwnd_update = 1;
}

