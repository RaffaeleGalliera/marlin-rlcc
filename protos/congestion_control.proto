syntax="proto3";

package congestioncontrol;

option java_multiple_files = true;
option java_outer_classname = "CongestionControlProto";

// Interface exported by the server
service CongestionControl {
    // Define a Bidirectional streaming
    //
    // Accept a stream of TransmissionStatuses sent while the optimal action
    // is waiting to be computed other TransmissionStatuses are recieved
    rpc OptimizeCongestionControl(stream Parameter) returns (stream Action) {}
}

message Parameter {
    enum parameterType {
        CHUNK_RTT_MICRO = 0;
        MIN_ACK_TIME_MICRO = 1;
        SENT_BYTES = 2;
        RCV_BYTES = 3;
        SENT_GOOD_BYTES = 4;
        CURR_WINDOW_SIZE = 5;
        UNACK_BYTES = 6;
        RETRANSMISSIONS = 7;
    }

    int64 value = 1;
    int64 timestamp = 2;
    parameterType parameter_type = 3;
}

// Actions represent the CongestionWindow update to be performed
message Action {
    int64 cwnd_update = 1;
}
